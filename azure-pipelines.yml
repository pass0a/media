pool:
  name: Hosted VS2017
  demands: npm

steps:
- task: DownloadGitHubRelease@0
  inputs:
    connection: 'githubToken'
    userRepository: 'losper/passoa'
    defaultVersionType: 'latest'
    itemPattern: 'passoa-msvc*'
    downloadPath: './'
- task: DownloadGitHubRelease@0
  inputs:
    connection: 'githubToken'
    userRepository: 'pass0a/package'
    defaultVersionType: 'latest'
    itemPattern: '*.7z'
    downloadPath: './'

- script: |
   mkdir depends
   7z x passoa*.zip -r -o./depends/passoa -y
   cd depends
   curl -L -o vcredist_x86.exe https://download.microsoft.com/download/9/3/F/93FCF1E7-E6A4-478B-96E7-D4B285925B00/vc_redist.x86.exe
   
   ls
  displayName: 'install all depends'

- script: |
   curl -L -o ffmpeg.zip https://ffmpeg.zeranoe.com/builds/win32/shared/ffmpeg-latest-win32-shared.zip
   7z x ffmpeg.zip -r -o./ -y
   ls
   cp ffmpeg-latest-win32-shared/ depends/ffmpeg/ -rf

  displayName: 'install pcanbase'

- task: Npm@1
  displayName: 'npm install'
  inputs:
    workingDir: ./
    verbose: false

- task: Npm@1
  displayName: 'npm custom'
  inputs:
    command: custom
    workingDir: ./
    verbose: false
    customCommand: 'run pm-msvc'
- script: |
   ls tmp
   ls node_modules/@passoa
  displayName: 'show debuginfo'
  
- task: Npm@1
  displayName: 'npm custom'
  inputs:
    command: custom
    workingDir: ./
    verbose: false
    customCommand: 'run build'

- script: |
   cp node_modules/@passoa/ depends/passoa/msvc/node_modules/@passoa/ -rf
  displayName: 'install node_mudules/@passoa'
  condition: and(succeeded(), ne(variables['Build.SourceBranch'], 'refs/heads/master'))


- task: nsis@1
  inputs:
    scriptFile: 'media.nsi'
    justInclude: 'no'
    includeMorePlugins: 'no'
  condition: and(succeeded(), ne(variables['Build.SourceBranch'], 'refs/heads/master'))

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: 'RevealSetup.exe'
    includeRootFolder: false
    archiveType: '7z'
    archiveFile: '$(Build.ArtifactStagingDirectory)/Media-$(Build.SourceBranchName)-$(Build.BuildId).7z'
    replaceExistingArchive: true
  condition: and(succeeded(), ne(variables['Build.SourceBranch'], 'refs/heads/master'))

- task: GitHubRelease@0
  inputs:
    gitHubConnection: 'githubToken'
    repositoryName: '$(Build.Repository.Name)'
    action: 'create'
    target: '$(Build.SourceVersion)'
    tagSource: 'auto'
    releaseNotesFile: 'ChangeLog'
    addChangeLog: false
  condition: and(succeeded(), ne(variables['Build.SourceBranch'], 'refs/heads/master'))
